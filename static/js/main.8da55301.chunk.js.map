{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","to","Error404","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","o","index","key","e","currentTarget","value","SuperRadio","type","name","onChangeCallback","i","arr","HW7","useState","homeWorkReducer","state","action","stateCopy","payload","sort","a","b","filter","p","age","SuperButton","red","className","finalClassName","s","default","initialPeople","_id","HW8","people","setPeople","finalPeople","onClick","PreJunior","HW1","Affair","props","affair","priority","removeBtn","deleteAffairCallback","Affairs","mappedAffairs","data","filterBtn","setFilter","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","newAffairs","push","deleteAffair","Greeting","inputClass","setNameCallback","addUser","setErrorCallback","error","totalUsers","userInput","onKeyPress","charCode","addBtn","infoDiv","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","user","v1","console","log","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","restoreValue","PATH","Routes","path","exact","render","Junior","JuniorPlus","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8da55301.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"Greeting_addBtn__2xR7G\",\"userInput\":\"Greeting_userInput__14aRO\",\"error\":\"Greeting_error__1Qk7l\",\"infoDiv\":\"Greeting_infoDiv__15leA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__217cV\",\"errorInput\":\"SuperInputText_errorInput__2NBjp\",\"error\":\"SuperInputText_error__3lgFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3YDIR\",\"red\":\"SuperButton_red__gDucQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__21K1d\",\"spanClassName\":\"SuperCheckbox_spanClassName__3rEQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1ka5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3zkMo\",\"column\":\"HW4_column__11Xt0\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n          <NavLink to='/pre-junior'>Pre-junior </NavLink>\n          <NavLink to='/junior'>Junior </NavLink>\n          <NavLink to='/junior-plus'>Junior+</NavLink>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>;\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n  options?: string[];\n  onChangeOption?: (option: any) => void;\n};\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, index) => <option key={index}>{o}</option>)\n    : []; // map options with key\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    // onChange, onChangeOption\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  return (\n    <select onChange={onChangeCallback} {...restProps}>\n      {mappedOptions}\n    </select>\n  );\n};\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                value={o}\n                // name, checked, value, onChange\n                onChange={onChangeCallback}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","export const homeWorkReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        case \"sort\": {\n        let stateCopy = [...state]\n           return action.payload == 'up'? stateCopy.sort((a:any,b:any) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)) \n           : stateCopy.sort((a:any,b:any) => (a.name < b.name) ? 1 : ((b.name < a.name) ? -1 : 0))\n            \n        }\n        case \"check\": {\n            \n            return [...state].filter((p:any)=>p.age>=action.payload)\n        }\n        default: return state\n    }\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            {p.name}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(people, {type: \"sort\", payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(people, {type: \"sort\", payload: \"down\"}))\n    const checkAge = () => setPeople(homeWorkReducer(people, {type: \"check\", payload:18}))\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n\n           <div><SuperButton onClick={checkAge}>check 18</SuperButton></div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n         \r\nJUNIOR\r\n<HW7/>\r\n<HW8/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n         JUNIOR+\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            {/*<Message*/}\n            {/*    avatar={messageData.avatar}*/}\n            {/*    name={messageData.name}*/}\n            {/*    message={messageData.message}*/}\n            {/*    time={messageData.time}*/}\n            {/*/>*/}\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\nimport s from './Affairs.module.css'\ntype AffairPropsType = {\n  affair: AffairType; \n  deleteAffairCallback: (_id: number) => void; \n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = (_id: number) => {\n    props.deleteAffairCallback(_id);\n  };\n\n  return (\n    <div className={s.affair}>\n      <span>\n        {props.affair.name} (priority:{props.affair.priority})\n      </span>\n\n      <button className={s.removeBtn}\n        onClick={() => {\n          deleteCallback(props.affair._id);\n        }}\n      >\n        X\n      </button>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from './Affairs.module.css'\ntype AffairsPropsType = { \n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id:number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair \n            key={a._id} \n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}; \n    const setHigh = () => {props.setFilter('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button className={s.filterBtn} onClick={setAll}>All</button>\n            <button className={s.filterBtn} onClick={setHigh}>High</button>\n            <button className={s.filterBtn} onClick={setMiddle}>Middle</button>\n            <button className={s.filterBtn} onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n\nexport type AffairPriorityType = 'high' | 'middle' | 'low'; \nexport type AffairType = {\n    _id:number\n    name: string\n    priority: AffairPriorityType\n}; \nexport type FilterType = \"all\" | AffairPriorityType;\n\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):  Array<AffairType> => { \n    if (filter === \"all\") return affairs;\n   \n    \n      else  return affairs.filter(affair => affair.priority === filter)\n    \n}\nexport const deleteAffair = (affairs:  Array<AffairType>, _id: number):  Array<AffairType> => { \n    let newAffairs = []\n    for(let affair of affairs){\n        if(affair._id !== _id){\n            newAffairs.push(affair)\n        }\n    }\n    return newAffairs\n     \n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); \n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); \n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n           \n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n           \n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: (name:string) => void // need to fix any\n    error:  string | null// need to fix any\n    totalUsers: number // need to fix any\n    setErrorCallback:(e:string | null) => void\n    \n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, setErrorCallback, error, totalUsers} // деструктуризация пропсов\n) => { \n    let inputClass;\n     inputClass = error? s.error : s.userInput // need to fix with (?:)\n    const onKeyPressCallback = (e:KeyboardEvent<HTMLInputElement>) => {\n        setErrorCallback(null)\n        if (e.charCode === 13) {\n            addUser(name)\n    \n          }\n         \n       \n    }\n    const addUserCallback = () => {\n        addUser(name)\n    }\n    return (\n        <div>\n            <input value={name} onChange={(e)=>{setNameCallback(e)}} onKeyPress={onKeyPressCallback} className={inputClass}/>\n            <button className={s.addBtn} onClick={addUserCallback}>ADD</button>\n            <span>{totalUsers}</span> \n            {error && <div className={s.infoDiv}>{error}</div>}\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string | null>(null); // need to fix any\n\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement>) => { // need to fix any\n         setName(e.currentTarget.value); // need to fix\n    };\n    const setErrorCallback = (e: string | null) =>{\n        setError(e)\n    }\n    const addUser = () => {\n      if(name.trim() === ''){\n        setError('enter your name')\n        }  \n        else {addUserCallback(name);\n            setName('')\n        alert(`hello, ${name}!`)}\n    };\n\n    let totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            setErrorCallback={setErrorCallback}\n            \n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport { v1 } from \"uuid\";\nimport GreetingContainer from \"./GreetingContainer\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { \n        // need to fix any\n       \n        let user = {_id:v1(), name:name}\n       \n       \n        setUsers([user, ...users]);\n        console.log([user, ...users])\n        // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = error? s.error: '';\n    const finalInputClassName = error? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n       onChange && onChange(e)\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    \n         \n       \n    }\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        // \n      \n       // выключить editMode при нажатии Enter\n       setEditMode(!editMode)\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(!editMode); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n        setEditMode(!editMode)\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        const restoreValue = restoreState<string>('editable-span-value', value)\n        setValue(restoreValue)\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR:\"/junior\",\n    JUNIOR_PLUS:\"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5/>\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__1wYPJ\",\"removeBtn\":\"Affairs_removeBtn__3Mwk9\",\"filterBtn\":\"Affairs_filterBtn__2TPBg\"};"],"sourceRoot":""}